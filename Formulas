I used below codes to rename columns on SQLite data tables after importing these data files from my desktop. 

# Change Column titles of all column names in Allergies Table (Syntax should be followed to add special character between the words)
ALTER TABLE allergies RENAME COLUMN c1 TO Start;
ALTER TABLE allergies RENAME COLUMN c2 TO Stop;
ALTER TABLE allergies RENAME COLUMN c3 TO Patient;
ALTER TABLE allergies RENAME COLUMN c4 TO Encounter;
ALTER TABLE allergies RENAME COLUMN c5 TO Code;
ALTER TABLE allergies RENAME COLUMN c6 TO Datasource;
ALTER TABLE allergies RENAME COLUMN c7 TO Culprit_Product;
ALTER TABLE allergies RENAME COLUMN c8 TO Type;
ALTER TABLE allergies RENAME COLUMN c9 TO Category;
ALTER TABLE allergies RENAME COLUMN c10 TO Reaction_Type_1;
ALTER TABLE allergies RENAME COLUMN c11 TO Reaction_1;
ALTER TABLE allergies RENAME COLUMN c12 TO Severity_1;
ALTER TABLE allergies RENAME COLUMN c13 TO Reaction_Type_2;
ALTER TABLE allergies RENAME COLUMN c14 TO Reaction_2;
ALTER TABLE allergies RENAME COLUMN c15 TO Severity_2;


# Change Column titles of all column names in Patients Table
ALTER TABLE patients RENAME COLUMN c1 TO ID;
ALTER TABLE patients RENAME COLUMN c2 TO Birth_Date;
ALTER TABLE patients RENAME COLUMN c3 TO Death_Date;
ALTER TABLE patients RENAME COLUMN c4 TO SSN;
ALTER TABLE patients RENAME COLUMN c5 TO Drivers;
ALTER TABLE patients RENAME COLUMN c6 TO Passport;
ALTER TABLE patients RENAME COLUMN c7 TO Prefix;
ALTER TABLE patients RENAME COLUMN c8 TO First_Credential;
ALTER TABLE patients RENAME COLUMN c9 TO Last_Credential;
ALTER TABLE patients RENAME COLUMN c10 TO Suffix;
ALTER TABLE patients RENAME COLUMN c11 TO Maiden;
ALTER TABLE patients RENAME COLUMN c12 TO Married;
ALTER TABLE patients RENAME COLUMN c13 TO Race;
ALTER TABLE patients RENAME COLUMN c14 TO Ethnicity;
ALTER TABLE patients RENAME COLUMN c15 TO Gender;
ALTER TABLE patients RENAME COLUMN c16 TO Birthplace;
ALTER TABLE patients RENAME COLUMN c17 TO Address;
ALTER TABLE patients RENAME COLUMN c18 TO City; 
ALTER TABLE patients RENAME COLUMN c19 TO State; 
ALTER TABLE patients RENAME COLUMN c20 TO County; 
ALTER TABLE patients RENAME COLUMN c21 TO Zip; 
ALTER TABLE patients RENAME COLUMN c22 TO Latitude; 
ALTER TABLE patients RENAME COLUMN c23 TO Longitude; 
ALTER TABLE patients RENAME COLUMN c24 TO Healthcare_Expenses; 
ALTER TABLE patients RENAME COLUMN c25 TO Healthcare_Coverage; 

# Change Column titles of all column names in Imaging Studies Table
ALTER TABLE imaging_studies RENAME COLUMN c1 TO ID;
ALTER TABLE imaging_studies RENAME COLUMN c2 TO Date;
ALTER TABLE imaging_studies RENAME COLUMN c3 TO PatientNumber;
ALTER TABLE imaging_studies RENAME COLUMN c4 TO Encounter;
ALTER TABLE imaging_studies RENAME COLUMN c5 TO Series_UID;
ALTER TABLE imaging_studies RENAME COLUMN c6 TO BodySiteCode;
ALTER TABLE imaging_studies RENAME COLUMN c7 TO Body_Site;
ALTER TABLE imaging_studies RENAME COLUMN c8 TO Image_Code;
ALTER TABLE imaging_studies RENAME COLUMN c9 TO Image_Description;
ALTER TABLE imaging_studies RENAME COLUMN c10 TO Instance_UID;
ALTER TABLE imaging_studies RENAME COLUMN c11 TO Storage_Code;
ALTER TABLE imaging_studies RENAME COLUMN c12 TO Storage_Description;
ALTER TABLE imaging_studies RENAME COLUMN c13 TO Procedure_Code;

# Change Column titles of all column names in Observations table
ALTER TABLE observations RENAME COLUMN c1 TO Date;
ALTER TABLE observations RENAME COLUMN c2 TO ID;
ALTER TABLE observations RENAME COLUMN c3 TO Encounter;
ALTER TABLE observations RENAME COLUMN c4 TO Observations_Category;

# Change Column titles of all column names in Vitals table
ALTER TABLE Vitals RENAME COLUMN c5 TO ObservationsCode;
ALTER TABLE Vitals RENAME COLUMN c6 TO VitalSigns_Description;
ALTER TABLE Vitals RENAME COLUMN c7 TO VitalSigns_Value;
ALTER TABLE Vitals RENAME COLUMN c8 TO VitalSigns_Units;
ALTER TABLE Vitals RENAME COLUMN c9 TO VitalSigns_ValueType;

# We should use Order By clause initially followed by Group by clause. 
#Reverse chronology throws error as the table woud get grouped with data having similar values then only it would accept to get sorted in ascending or descending order.
# Table name is not needed before column names once using JOIN statement comes in place. 
# Above logic happens as the JOIN cluase makes sure which clumn comes from which table. So unless there is syntax error, table names needed before using JOIN only. 
select patients.city, province_names.province_name  
from patients
inner join province_names on patients.province_id=province_names.province_id
where gender in ('M') and height > 40
group by allergies having weight>50
order by city;
