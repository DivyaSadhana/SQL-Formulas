# Create new Data Table with Primary Key and Foreign key in relation to Allergies data table. Medicines column should not be null.
Create Table Data 
(ID INT Primary Key,
Hospital_Name VARCHAR,
Date_of_Admission Date,
Medicines VARCHAR NOTNULL,
Foreign Key (Date_of_Admission), References Allergies(Date_of_Admission);

#Add 3 rows to the table 
INSERT INTO Data (ID, Hospital_Name, Date_of_Admission, Medicines)
Values (1, Sakra, 14/10/2024, Paracetamol)
(2, Rainbow, 20/5/2024, Panadol)
(3, Vivan, 6/6/2024, Tramadol)

# Add another column to the newly created table
ALTER TABLE Data Add Disease;

# Delete the recently added column 
ALTER TABLE Data Drop Disease;

# Rename the table from Data to Hospital Details
ALTER TABLE Data RENAME TO Hospital_Details;

# Rename column Medicines to Medications
ALTER TABLE Data Rename Medicines TO Medications;

# Delete specific rows. Delete record for the patient who used Tramadol drug.
DELETE FROM Hospital_Details
where Medicines = 'Tramadol';

#Remove all rows in data table but retain column names
TRUNCATE TABLE Data;

# Delete all rows in data table by retaining column namnes
DELETE TABLE Hospital_Details;

# Delete the entire data table permanently from SQL server. DROP functionality output cannot be rolled back
DROP TABLE Hospital_Details;

# Create Dummy table same as Hospital_Details (or) insert all columns, rows from Hospital_Details table to Dummy table.
Create TABLE Dummy
AS Select * From Hospital_Details;

# Add rows from Hospital table to Dummy Table
INSERT INTO Dummy2 (ID, Name, date_of_adnission, BMI, Medicines)
select ID, Name, date_of_adnission, BMI, Medicines from Data;

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

Patients Table : Patient ID, First Name, Last Name, Gender, Birth Date, City, Province ID, Allergies, Height, Weight.
Admission table: Patient ID, Admission Date, Discharge Date, Diagnosis, Doctor ID.
Province Names: Province ID, Province Name.

# Replace all null values in allergies column with NKA. 
UPDATE Patients
SET allergies = 'NKA' where allergies ISNULL;

# Show first name and last name merged into one column to show their full name. 
Hint: Give space between special charecters ' ' to generate space between first name and last name.
SELECT
CONCAT(first_name,' ',last_name) AS full_name
FROM patients;

Or use below formla also for concatenate purpose.
SELECT first_name || ' ' || last_name
FROM patients;

#Show first name, last name, and the full province name of each patient.
SELECT
  first_name,
  last_name,
  province_names.province_name
FROM patients
  left join province_names ON province_names.province_id = patients.province_id;

# Show how many patients have a birth_date with 2010 as the birth year.
SELECT count(patient_id) AS total_patients
FROM patients
WHERE
  year(birth_date) = 2010;

or Use below logic for the same purpose.
SELECT count(first_name) AS total_patients
FROM patients
WHERE
  birth_date >= '2010-01-01'
  AND birth_date <= '2010-12-31'

# Show the first_name, last_name, and height of the patient with the greatest height.
SELECT first_name, last_name, max(height) as Height FROM patients;

# Show the total number of admissions
SELECT count(*) as Total_Admissions FROM admissions;

# Show all the columns from admissions where the patient was admitted and discharged on the same day.
SELECT * FROM admissions
where admission_date = discharge_date;

#Show first name of patients that start with the letter 'C'
SELECT first_name FROM patients
WHERE
  first_name LIKE 'C%'

# Based on the cities that our patients live in, show unique cities that are in province_id 'NS'?
select distinct(city) from patients
where province_id = 'NS';

# Show unique birth years from patients and order them by ascending.
select DISTINCT(YEAR (birth_date)) from patients
order by birth_date asc;

# Show unique first names from the patients table which only occurs once in the list.

# For example, if two or more people are named 'John' in the first_name column then don't include their name in the output list. 
#If only 1 person is named 'Leo' then include them in the output.
select distinct(first_name) from patients
group by first_name having count(first_name)=1;

Or use below formula for same purpose
SELECT first_name
FROM (
    SELECT
      first_name,
      count(first_name) AS occurrencies
    FROM patients
    GROUP BY first_name
  )
WHERE occurrencies = 1

# Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long.
SELECT patient_id, first_name FROM patients
WHERE first_name LIKE 's%s'
AND len(first_name) >= 6;

# Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'. Primary diagnosis is stored in the admissions table.
SELECT patients.patient_id, patients.first_name, patients.last_name
FROM patients
left join admissions on patients.patient_id = admissions.patient_id
WHERE diagnosis = 'Dementia';

# Display every patient's first_name. Order the list by the length of each name and then by alphabetically.
SELECT first_name from patients 
order by len(first_name), first_name;

